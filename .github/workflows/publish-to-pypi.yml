name: Build and Publish to PyPI
on: push

jobs:
  build-n-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"
    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.path ~/.virtualenvs
        poetry config repositories.test-pypi https://test.pypi.org/legacy/
        poetry config pypi-token.test-pypi "${{ secrets.TEST_PYPI_API_TOKEN }}"
        poetry config pypi-token.pypi "${{ secrets.PYPI_API_TOKEN }}"
    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: verify code formatting
      run: poetry run black . --check
    - name: run unit tests
      run: poetry run pytest
    - name: build package
      run: |
        poetry version $(git describe --tags | sed -Ee 's/([^-]*)-([^-]+)-.*/\1.\2/')
        poetry build

    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags')
      run: |
        poetry publish
    - name: Publish to Test PyPI
      if: github.ref == 'refs/heads/main'
      run: |
        poetry publish -r test-pypi
